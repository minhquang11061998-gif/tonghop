@page "/score_online"
@using System.IdentityModel.Tokens.Jwt
@using DataBase.DTOs
@using global::Data.DTOs
@layout MainLayout
@inject HttpClient Client
@inject IJSRuntime jsRuntime

<PageTitle>Score</PageTitle>

@page "/studentscores"

@code {
    private List<PointTypeQuantityDTO> scoreslist = new List<PointTypeQuantityDTO>();
    private TokenResponse tokenResponse;
    private string id;
    private string errorMessage;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var token = await jsRuntime.InvokeAsync<string>("localStorage.getItem", "YourSuperSecretKeyHere");
            if (!string.IsNullOrEmpty(token))
            {
                try
                {
                    tokenResponse = new TokenResponse { Token = token };
                    var handler = new System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler();
                    var jsonToken = handler.ReadToken(token) as System.IdentityModel.Tokens.Jwt.JwtSecurityToken;
                    id = jsonToken?.Claims.FirstOrDefault(c => c.Type == "CodeStudent")?.Value;
                    scoreslist = await Client.GetFromJsonAsync<List<PointTypeQuantityDTO>>($"api/Score/GetScores_code?code={id}");

                    if (scoreslist == null || !scoreslist.Any())
                    {
                        errorMessage = "Không tìm thấy dữ liệu điểm.";
                    }

                    StateHasChanged();
                }
                catch (Exception ex)
                {
                    errorMessage = $"Đã xảy ra lỗi: {ex.Message}";
                    StateHasChanged();
                }
            }
            else
            {
                errorMessage = "Không tìm thấy token.";
                StateHasChanged();
            }
        }
    }
}

@* Mã học sinh *@
<h2 class="text-center">Điểm số của học sinh: @id</h2>

@* Thông báo lỗi *@
@if (errorMessage != null)
{
    <p class="alert alert-danger">@errorMessage</p>
}
else if (scoreslist != null && scoreslist.Any())
{
    <table class="table table-striped table-bordered table-hover custom-table">
        <thead>
            <tr>
                <th rowspan="2">Môn học</th>
                <th colspan="3">Điểm miệng</th>
                <th colspan="3">Điểm 15p</th>
                <th colspan="2">Điểm 45p</th>
                <th rowspan="2">Điểm giữa kỳ</th>
                <th rowspan="2">Điểm cuối kỳ</th>
                <th rowspan="2">Tổng điểm</th>
            </tr>
            <tr>
                <th>Điểm 1</th>
                <th>Điểm 2</th>
                <th>Điểm 3</th>
                <th>Điểm 1</th>
                <th>Điểm 2</th>
                <th>Điểm 3</th>
                <th>Điểm 1</th>
                <th>Điểm 2</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var score in scoreslist)
            {
                <tr>
                    <td class="font-weight-bold">@score.SubjectName</td>

                    <!-- Điểm miệng -->
                    @for (int i = 0; i < 3; i++)
                    {
                        <td class="@(score.Miệng != null && score.Miệng.Count > i ? "" : "bg-warning")">
                            @(score.Miệng != null && score.Miệng.Count > i ? score.Miệng[i].ToString() : "")
                        </td>
                    }

                    <!-- Điểm 15p -->
                    @for (int i = 0; i < 3; i++)
                    {
                        <td class="@(score.FifteenMinutes != null && score.FifteenMinutes.Count > i ? "" : "bg-warning")">
                            @(score.FifteenMinutes != null && score.FifteenMinutes.Count > i ? score.FifteenMinutes[i].ToString() : "")
                        </td>
                    }

                    <!-- Điểm 45p -->
                    @for (int i = 0; i < 2; i++)
                    {
                        <td class="@(score.FortyFiveMinutes != null && score.FortyFiveMinutes.Count > i ? "" : "bg-warning")">
                            @(score.FortyFiveMinutes != null && score.FortyFiveMinutes.Count > i ? score.FortyFiveMinutes[i].ToString() : "")
                        </td>
                    }

                    <!-- Điểm giữa kỳ -->
                    <td class="@(score.MidTerm != null && score.MidTerm.Count > 0 ? "" : "bg-warning")">
                        @(score.MidTerm != null && score.MidTerm.Count > 0 ? score.MidTerm[0].ToString() : "")
                    </td>

                    <!-- Điểm cuối kỳ -->
                    <td class="@(score.Final != null && score.Final.Count > 0 ? "" : "bg-warning")">
                        @(score.Final != null && score.Final.Count > 0 ? score.Final[0].ToString() : "")
                    </td>

                    <!-- Tổng điểm -->
                    <td>
                        @((score.FifteenMinutes.Sum() + score.Miệng.Sum() + score.FortyFiveMinutes.Sum() + score.MidTerm.Sum() + score.Final.Sum()).ToString())
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
