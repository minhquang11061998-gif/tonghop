@page "/face-registration"
@using global::Data.DTOs
@layout AdminLayout
@inject HttpClient Http
@inject NavigationManager navigate
@inject IJSRuntime JS
<div class="p-3 border min-vh-100">
    <h3 class="text-primary mb-4">Đăng ký khuôn mặt</h3>
    <div class="row">
        <div class="col-md-8 p-2">
            <table class="table rounded shadow table-hover table-bordered bg-primary table-3d">
                <thead class="thead-dark text-center bg-primary" style="overflow-x:hidden;overflow-y:auto">
                    <tr>
                        <th scope="col" class="text-center">STT</th>
                        <th scope="col">Họ và Tên</th>
                        <th scope="col">Email</th>
                        <th scope="col">Trạng thái</th>
                        <th scope="col" class="text-center">Thao tác</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in studentDTOs)
                    {
                        <tr class="align-middle table-light row-3d">
                            <td class="text-center">@(studentDTOs.IndexOf(item) + 1)</td>
                            <td>@item.Name</td>
                            <td>@item.Email</td>
                            <td>@(item.IsRegistered ? "Đã đăng ký" : "Chưa đăng ký")</td>
                            <td class="text-center">
                                <button class="btn btn-sm btn-success rounded-pill me-2 px-3" @onclick="() => RegisterFaceAsync(item.Id.ToString())">
                                    Đăng ký
                                </button>
                                <button class="btn btn-sm btn-danger rounded-pill px-3" @onclick="() => delete(item.Id.ToString())">
                                    Xóa
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="col-md-4 p-2">
            <div style="position: relative; display: inline-block; border: 1px solid #ccc; border-radius: 8px; overflow: hidden;">
                <img id="cameraStream" src="https://apismartschools.azurewebsites.net/api/FaceId/camera-stream" alt="Camera Stream" class="img-fluid" style="max-width: 100%; height: auto;" />
                <canvas id="faceCanvas" style="position: absolute; top: 0; left: 0; pointer-events: none; width: 100%; height: 100%;"></canvas>
            </div>
        </div>
    </div>
</div>

@code {
    private List<StudentDTO> studentDTOs = new List<StudentDTO>();

    protected override async Task OnInitializedAsync()
    {
        studentDTOs = await Http.GetFromJsonAsync<List<StudentDTO>>("https://apismartschools.azurewebsites.net/api/Student/get-all-student2");
    }
    private async Task delete(string id)
    {
        var resrpon = await Http.DeleteAsync($"https://apismartschools.azurewebsites.net/api/FaceId/remove-face?userId={id}");
        if (resrpon.IsSuccessStatusCode)
        {
            await JS.InvokeVoidAsync("alert", "xóa dữ liệu thành công");
        }
        else { await JS.InvokeVoidAsync("alert", "xóa dữ liệu thất bại"); }

    }
    private async Task RegisterFaceAsync(string userId)
    {
        if (string.IsNullOrWhiteSpace(userId))
        {
            await JS.InvokeVoidAsync("alert", "vui lòng nhập ID user");
            return;
        }

        try
        {
            var response = await Http.PostAsync($"https://apismartschools.azurewebsites.net/api/FaceId/register-face?userId={userId}", null);
            if (response.IsSuccessStatusCode)
            {
                navigate.NavigateTo(navigate.Uri, forceLoad: true);
                await JS.InvokeVoidAsync("alert", "thêm dữ liệu  thành công");
            }
            else
            {
                var errorResponse = await response.Content.ReadAsStringAsync();
                await JS.InvokeVoidAsync("alert", "thêm dữ liệu không thành công");
            }
        }
        catch (Exception)
        {
            await JS.InvokeVoidAsync("alert", "thêm dữ liệu không thành công");
        }
    }
}
