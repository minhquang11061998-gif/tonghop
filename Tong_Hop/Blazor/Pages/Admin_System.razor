@page "/teacher-system"
@using DataBase.Models
@using global::Data.DTOs
@layout AdminLayout
@inject HttpClient client
@inject IJSRuntime jsRuntime
@inject NavigationManager navigate

<div class="container-fluid pt-5">
    <div style="display: flex;">
        <div style="flex: 2; padding-right: 20px;">
            <table class="table-fixed">
                <thead>
                    <tr>
                        <th>STT</th>
                        <th>Họ tên</th>
                        <th>SĐT</th>
                        <th>Email</th>
                        <th>Trạng thái</th>
                        <th>Hành động</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var n in systemConfigs)
                    {
                        <tr>
                            <td>@(systemConfigs.IndexOf(n) + 1)</td>
                            <td>@n.Name</td>
                            <td>@n.PhoneNumber</td>
                            <td>@n.Email</td>
                            <td>
                                @if (n.IsViewed)
                                {
                                    <span class="status viewed">Đã xem</span>
                                }
                                else
                                {
                                    <span class="status not-viewed">Chưa xem</span>
                                }
                            </td>
                            <td>
                                <button class="btn-view" @onclick="() => ShowDetails(n)">Xem chi tiết</button>
                                <button class="btn-delete" @onclick="()=> delete(n.Id)">Xóa</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div style="flex: 1; padding: 20px; border-left: 1px solid #ddd; background-color: #f9f9f9;">
            @if (selectedConfig != null)
            {
                <h4>Chi tiết thông tin</h4>
                <div class="details">
                    <p><strong>Họ tên:</strong> @selectedConfig.Name</p>
                    <p><strong>SĐT:</strong> @selectedConfig.PhoneNumber</p>
                    <p><strong>Email:</strong> @selectedConfig.Email</p>
                    <p><strong>Địa chỉ:</strong> @selectedConfig.address</p>
                    <p><strong>Thông tin:</strong> @selectedConfig.Value</p>
                </div>
            }
            else
            {
                <p>Vui lòng chọn một thông tin liên hệ để xem chi tiết</p>
            }
        </div>
    </div>
</div>


<style>
    .table-fixed {
        width: 100%;
        border-collapse: collapse;
        overflow-y: scroll;
    }

        .table-fixed thead {
            background-color: #343a40;
            color: #ffffff;
        }

        .table-fixed th, .table-fixed td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }



    .status {
        font-weight: bold;
    }

        .status.viewed {
            color: green;
        }

        .status.not-viewed {
            color: orange;
        }

    .btn-view, .btn-delete {
        padding: 8px 12px;
        margin: 0 5px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .btn-view {
        background-color: #007bff;
        color: white;
    }

    .btn-delete {
        background-color: #dc3545;
        color: white;
    }

    .btn-view:hover {
        background-color: #0056b3;
    }

    .btn-delete:hover {
        background-color: #c82333;
    }

    .details {
        background-color: #ffffff;
        padding: 15px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        .details p {
            margin: 5px 0;
        }
</style>

@code {
    private List<SystemConfigs> systemConfigs = new List<SystemConfigs>();
    private SystemConfigs selectedConfig; // Lưu thông tin giáo viên đã chọn
    protected override async Task OnInitializedAsync()
    {
        systemConfigs = await client.GetFromJsonAsync<List<SystemConfigs>>("api/SystemConfig/get-all-SystemConfig");
    }

    private async Task MarkAsViewed(Guid id)
    {
        var config = systemConfigs.FirstOrDefault(x => x.Id == id);
        if (config != null)
        {
            config.IsViewed = true; // Đánh dấu là đã xem
            var response = await client.PostAsJsonAsync($"api/SystemConfig/mark-as-viewed/{id}", config);

            if (response.IsSuccessStatusCode)
            {
                // Cập nhật danh sách chỉ khi API trả về thành công
                systemConfigs = await client.GetFromJsonAsync<List<SystemConfigs>>("api/SystemConfig/get-all-SystemConfig");
            }
            else
            {
                // Có thể hiển thị thông báo lỗi ở đây nếu cần
                Console.WriteLine("Failed to update the viewed status.");
            }
        }
    }
    private async Task delete(Guid Id)
    {
        var response = await client.DeleteAsync($"api/SystemConfig/delete-system?Id={Id}");
        if (response.IsSuccessStatusCode)
        {
            await jsRuntime.InvokeVoidAsync("Swal.fire", new
            {
                title = "Thành công!",
                text = "Xóa đữ liệu thành công!",
                icon = "success",
                confirmButtonText = "OK"
            });
            navigate.NavigateTo(navigate.Uri, forceLoad: true);
        }
        else
        {
            await jsRuntime.InvokeVoidAsync("Swal.fire", new
            {
                title = "Thất bại!",
                text = "Xóa dữ liệu thất bại.",
                icon = "error",
                confirmButtonText = "OK"
            });
            navigate.NavigateTo(navigate.Uri, forceLoad: true);
        }
    }
    private async Task ShowDetails(SystemConfigs config)
    {
        await MarkAsViewed(config.Id); // Đánh dấu là đã xem
        selectedConfig = config; // Lưu thông tin giáo viên đã chọn
        StateHasChanged(); // Tái tạo giao diện người dùng
    }
}
