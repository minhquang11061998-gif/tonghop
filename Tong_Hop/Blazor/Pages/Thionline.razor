@page "/online-exam"
@using System.Net.Http.Headers
@using System.Text.Json
<PageTitle>Exam</PageTitle>
@inject IJSRuntime jsruntime
@inject HttpClient Http
@inject NavigationManager navigate

@if (!isLoginFormVisible)
{
    <div class="row mt-5 d-flex justify-content-center">
        <div class="rounded-3 bg-light shadow-lg p-4" style="width: 700px;">
            <div class="d-flex justify-content-center">
                <img style="height: 170px;" src="img/Rectangle89.png" alt="Logo" />
            </div>
            <div class="d-flex justify-content-center mt-3">
                <img id="cameraImage" src="https://localhost:7046/api/FaceId/camera-stream"
                     alt="Camera Feed"
                     class="rounded border border-primary"
                     style="width: 50%; max-height: 300px; object-fit: cover;" />
            </div>
            <div class="d-flex justify-content-center py-3">
                @if (isLoading)
                {
                    <p class="text-muted">Đang quét khuôn mặt, vui lòng đợi...</p>
                }
                else
                {
                    <button class="btn btn-primary w-50" id="submitBtn" @onclick="ScanFace" type="button">Xác nhận khuôn mặt</button>
                }
            </div>
        </div>
    </div>
}

@if (isLoginFormVisible && !isFaceScanComplete)
{
    <div class="row mt-5 d-flex justify-content-center">
        <div class="rounded-3 bg-light shadow-lg p-4" style="width: 700px;">
            <div class="d-flex justify-content-center">
                <img style="height: 170px;" src="img/Rectangle89.png" alt="Logo" />
            </div>
            <label class="fs-5 text-secondary mt-3">Nhập mã dự thi:</label>
            <div class="d-flex justify-content-center py-2">
                @for (int i = 1; i <= 6; i++)
                {
                    <input type="text"
                           class="form-control text-center fw-bold mx-1"
                           maxlength="1"
                           style="width: 60px; height: 60px; border-radius: 10px;"
                           oninput="moveToNext(this, '@(i == 6 ? "" : $"box{(i + 1)}")')"
                           id="box@(i)" />
                }
            </div>
            <div class="d-flex justify-content-center py-3">
                <button id="submitBtn" @onclick="HandleSubmit" class="btn btn-primary w-25" type="button" disabled="@isSubmitDisabled">Tiếp Theo</button>
            </div>
        </div>
    </div>
}

@if (isLoginFormVisible && isFaceScanComplete)
{
    <div class="row mt-5 d-flex justify-content-center">
        <div class="rounded-3 bg-light shadow-lg p-4" style="width: 700px;">
            <div class="d-flex justify-content-center">
                <img style="height: 170px;" src="img/Rectangle89.png" alt="Logo" />
            </div>
            <div class="py-1 px-4">
                <label class="fw-bold">Họ và Tên:</label><br />
                <label class="fw-bold">Email:</label><br />
                <label class="fw-bold">Ngày Sinh:</label><br />
                <label class="fw-bold">Mã học sinh:</label><br />
                <label class="fw-bold">Môn Thi:</label><br />
                <label class="fw-bold">Mã môn thi:</label><br />
                <label class="fw-bold">Thời gian:</label>
            </div>
            <div class="d-flex justify-content-center py-3">
                <button class="btn btn-success w-25" style="height: 50px;">Bắt Đầu Làm Bài</button>
            </div>
        </div>
    </div>
}

@code {
    private bool isSubmitDisabled = true;
    private bool isLoginFormVisible = false;
    private bool isFaceScanComplete = false;
    private string code = "";
    private bool isLoading = false;

    private async Task ScanFace()
    {
        isLoading = true;
        try
        {
            var token = await GetTokenAsync();
            Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);

            var response = await Http.PostAsync("https://localhost:7046/api/FaceId/check-face", null);
            if (response.IsSuccessStatusCode)
            {
                var responseData = await response.Content.ReadFromJsonAsync<JsonElement>();
                if (responseData.TryGetProperty("message", out JsonElement messageElement) &&
                    messageElement.GetString() == "Face matched.")
                {
                    await jsruntime.InvokeVoidAsync("alert", "Nhận diện thành công!");
                    isLoginFormVisible = true;
                }
                else
                {
                    await jsruntime.InvokeVoidAsync("alert", "Nhận diện không thành công. Thử lại!");
                }
            }
        }
        catch
        {
            await jsruntime.InvokeVoidAsync("alert", "Đã xảy ra lỗi trong quá trình quét khuôn mặt.");
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task HandleSubmit()
    {
        code = await jsruntime.InvokeAsync<string>("getCode");
        if (!string.IsNullOrEmpty(code) && code.Length == 6 && await VerifyCode())
        {
            navigate.NavigateTo($"/exam/{code}");
            await jsruntime.InvokeVoidAsync("enterExamMode");
        }
        else
        {

            await jsruntime.InvokeVoidAsync("alert", "Mã không hợp lệ!");
        }
        StateHasChanged();
    }

    private async Task<bool> VerifyCode()
    {
        var token = await GetTokenAsync();
        Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);

        var response = await Http.PostAsJsonAsync("https://localhost:7046/api/FaceId/Login-exam", new { codelogin = code });
        return response.IsSuccessStatusCode;
    }

    private async Task<string> GetTokenAsync()
    {
        return await jsruntime.InvokeAsync<string>("localStorage.getItem", "YourSuperSecretKeyHere");
    }
}
