@page "/Lop"
@using DataBase.Models
@inject HttpClient http
@layout AdminLayout
@inject NavigationManager navigationManager

<h3>Danh Sách Lớp Học</h3>
<button class="btn btn-primary" @onclick="Create">Thêm mới lớp</button>
<hr>
<table class="table">
	<thead>
		<tr>
			<th>STT</th>
			<th>Mã lớp</th>
			<th>Tên lớp</th>
			<th>Sĩ số</th>
			<th>Giáo viên</th>
			<th>Khối</th>
			<th>Ghi chú</th>
			<th>Hành động</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var classItem in classes)
		{
			var teacher = teachers.FirstOrDefault(r => r.Id == classItem.TeacherId);
			var codeTeacher = teacher?.Code ?? "Khong co du lieu";

			// Fetch grade and format name
			var grade = grades.FirstOrDefault(r => r.Id == classItem.GradeId);
			var nameGrade = grade != null ? GetGradeName(grade.Name) : "Khong co du lieu";

			<tr>
				<td>@(classes.IndexOf(classItem) + 1)</td>
				<td>@classItem.Code</td>
				<td>@classItem.Name</td>
				<td>@classItem.MaxStudent</td>
				<td>@codeTeacher</td>
				<td>@nameGrade</td>
				<td>@classItem.Status</td>
				<td>
					<button class="btn btn-warning" @onclick="(() => UpdateClass(classItem.Id))">Sửa</button>
					<button class="btn btn-danger" @onclick="(() => DeleteClass(classItem.Id))">Xóa</button>
					<button class="btn btn-info" @onclick="(() => DetailClass(classItem.Id))">Chi tiết</button>
				</td>
			</tr>
		}
	</tbody>
</table>

@code {
	private List<Classes> classes = new List<Classes>();
	private List<Teachers> teachers = new List<Teachers>();
	private List<Grades> grades = new List<Grades>();

	protected override async Task OnInitializedAsync()
	{
		await LoadClasses();
		await LoadTeachersAndGrades();
	}

	private string GetGradeName(int gradeNumber)
	{
		return $"Grade {gradeNumber}";
	}

	private async Task LoadClasses()
	{
		classes = await http.GetFromJsonAsync<List<Classes>>("https://apismartschools.azurewebsites.net/api/Classes/get-all-class");
	}

	private async Task LoadTeachersAndGrades()
	{
		teachers = await http.GetFromJsonAsync<List<Teachers>>("https://apismartschools.azurewebsites.net/api/Teacher/get-all-teacher");
		grades = await http.GetFromJsonAsync<List<Grades>>("https://apismartschools.azurewebsites.net/api/Grade/get-grade");
	}
	private void Create()
	{
		navigationManager.NavigateTo("/create-class");
	}

	private void UpdateClass(Guid id)
	{
		navigationManager.NavigateTo($"/update-class/{id}");
	}

	private async void DeleteClass(Guid id)
	{
		var response = await http.DeleteAsync($"https://apismartschools.azurewebsites.net/api/Classes/delete-class/{id}");
		if (response.IsSuccessStatusCode)
		{
			await LoadClasses();
		}
	}

	private void DetailClass(Guid id)
	{
		navigationManager.NavigateTo($"/class/manage/detail/{id}");
	}
}